"use strict";

var fs = _interopRequireWildcard(require("fs"));

var _common = require("test/common");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

describe('Load PNG', function () {
  const tests = [// ['name', components, alpha, bitDepth]
  ['grey8', 1, 0, 8], ['grey16', 1, 0, 16], ['greya16', 1, 1, 8], ['greya32', 1, 1, 16], ['rgb24', 3, 0, 8], ['rgb48', 3, 0, 16], ['rgba32', 3, 1, 8], ['rgba64', 3, 1, 16], ['plt-4bpp', 3, 0, 8], ['plt-8bpp-color', 3, 0, 8], ['plt-trns', 3, 1, 8]];
  it.each(tests)('should load from path %s', async (name, components, alpha, bitDepth) => {
    const img = await (0, _common.load)(`format/png/${name}.png`);
    expect(img.components).toBe(components);
    expect(img.alpha).toBe(alpha);
    expect(img.bitDepth).toBe(bitDepth);
  });
  it.each(tests)('should load from buffer %s', async (name, components, alpha, bitDepth) => {
    const data = fs.readFileSync((0, _common.getImage)(`format/png/${name}.png`));
    const img = await _common.Image.load(data);
    expect(img.components).toBe(components);
    expect(img.alpha).toBe(alpha);
    expect(img.bitDepth).toBe(bitDepth);
  });
});